// –î–∞–Ω–Ω—ã–µ –æ —Ü–≤–µ—Ç–∞—Ö - –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ localStorage –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
const STORAGE_KEY = 'pleione_flowers';

function getFlowers() {
    const savedFlowers = localStorage.getItem(STORAGE_KEY);
    if (savedFlowers) {
        return JSON.parse(savedFlowers);
    }

    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ
    return [
        {
            id: 1,
            name: "–†–æ–∑–∞ –ö–µ–Ω–∏—è (–ª–∏–ª–æ–≤–∞—è)",
            price: 120,
            description: "–ö—Ä–∞—Å–∏–≤–∞—è –ª–∏–ª–æ–≤–∞—è —Ä–æ–∑–∞ –∏–∑ –ö–µ–Ω–∏–∏, 40 —Å–º",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1549465220-1a8b9238cd48?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 2,
            name: "–†–æ–∑–∞ –ö–µ–Ω–∏—è (–∫—Ä–∞—Å–Ω–∞—è)",
            price: 120,
            description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∫—Ä–∞—Å–Ω–∞—è —Ä–æ–∑–∞ –∏–∑ –ö–µ–Ω–∏–∏, 40 —Å–º",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1562690868-60bbe7293e94?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 3,
            name: "–†–æ–∑–∞ Red Naomi",
            price: 250,
            description: "–ü—Ä–µ–º–∏—É–º —Ä–æ–∑–∞ Red Naomi, 60 —Å–º",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1582793988951-9c88b7d36c46?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 4,
            name: "–•—Ä–∏–∑–∞–Ω—Ç–µ–º–∞ –ê–ª—Ç–∞–π",
            price: 300,
            description: "–ü—ã—à–Ω–∞—è —Ö—Ä–∏–∑–∞–Ω—Ç–µ–º–∞ –ê–ª—Ç–∞–π",
            category: "chrysanthemums",
            emoji: "üåº",
            image: "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 5,
            name: "–ú–æ–Ω–¥–∏–∞–ª—å 60 —Å–º",
            price: 300,
            description: "–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è —Ä–æ–∑–∞ –ú–æ–Ω–¥–∏–∞–ª—å, 60 —Å–º",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 6,
            name: "–ú–æ–Ω–¥–∏–∞–ª—å –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è",
            price: 350,
            description: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è —Ä–æ–∑–∞ –ú–æ–Ω–¥–∏–∞–ª—å –ø—Ä–µ–º–∏—É–º –∫–∞—á–µ—Å—Ç–≤–∞",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1582793988951-9c88b7d36c46?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 7,
            name: "–ö–∞–Ω—Ç—Ä–∏ –ë–ª—é–∑",
            price: 300,
            description: "–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ä–æ–∑–∞ –ö–∞–Ω—Ç—Ä–∏ –ë–ª—é–∑, 50-60 —Å–º",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 8,
            name: "–ì–æ—Ä—Ç–µ–Ω–∑–∏—è –ö–µ–Ω–∏—è",
            price: 550,
            description: "–ü—ã—à–Ω–∞—è –≥–æ—Ä—Ç–µ–Ω–∑–∏—è –∏–∑ –ö–µ–Ω–∏–∏",
            category: "hydrangeas",
            emoji: "üå∏",
            image: "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 9,
            name: "–î–∏–∞–Ω—Ç—É—Å 60 —Å–º",
            price: 150,
            description: "–ù–µ–∂–Ω—ã–π –¥–∏–∞–Ω—Ç—É—Å, 60 —Å–º",
            category: "dianthus",
            emoji: "üå∫",
            image: "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=300&fit=crop&crop=center"
        },
        {
            id: 10,
            name: "–ü–∏–Ω–∫ –û—Ö–∞—Ä–∞ –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è",
            price: 350,
            description: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è —Ä–æ–∑–∞ –ü–∏–Ω–∫ –û—Ö–∞—Ä–∞",
            category: "roses",
            emoji: "üåπ",
            image: "https://images.unsplash.com/photo-1582793988951-9c88b7d36c46?w=400&h=300&fit=crop&crop=center"
        }
    ];
}

// –ö–æ—Ä–∑–∏–Ω–∞
let cart = [];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getCurrentUser() {
    return JSON.parse(localStorage.getItem('pleione_current_user') || 'null');
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserCart() {
    const currentUser = getCurrentUser();
    if (currentUser && currentUser.cart) {
        return currentUser.cart;
    }
    return [];
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function saveUserCart(cartItems) {
    const currentUser = getCurrentUser();
    if (currentUser) {
        const users = JSON.parse(localStorage.getItem('pleione_users') || '[]');
        const userIndex = users.findIndex(u => u.id === currentUser.id);
        if (userIndex !== -1) {
            users[userIndex].cart = cartItems;
            localStorage.setItem('pleione_users', JSON.stringify(users));

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            currentUser.cart = cartItems;
            localStorage.setItem('pleione_current_user', JSON.stringify(currentUser));
        }
    }
}

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
let currentView = 'grid';
let filteredFlowers = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function () {
    loadFlowers();
    loadUserCart();
    updateCartCount();
    setupFilters();

    // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadUserCart() {
    const currentUser = getCurrentUser();
    if (currentUser && currentUser.cart) {
        cart = [...currentUser.cart];
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function setupFilters() {
    const searchInput = document.getElementById('searchInput');
    const priceFilter = document.getElementById('priceFilter');
    const categoryTabs = document.getElementById('categoryTabs');

    searchInput.addEventListener('input', filterFlowers);
    priceFilter.addEventListener('change', filterFlowers);
    if (categoryTabs) {
        categoryTabs.addEventListener('click', (e) => {
            const btn = e.target.closest('.category-tab');
            if (!btn) return;
            document.querySelectorAll('.category-tab').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
            filterFlowers();
        });
    }
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ü–≤–µ—Ç–æ–≤
function filterFlowers() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const priceRange = document.getElementById('priceFilter').value;
    const activeCategoryBtn = document.querySelector('.category-tab.active');
    const activeCategory = activeCategoryBtn ? activeCategoryBtn.getAttribute('data-category') : '';
    const flowers = getFlowers();

    filteredFlowers = flowers.filter(flower => {
        // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –æ–ø–∏—Å–∞–Ω–∏—é
        const matchesSearch = flower.name.toLowerCase().includes(searchTerm) ||
            flower.description.toLowerCase().includes(searchTerm);

        // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
        let matchesPrice = true;
        if (priceRange) {
            const [minStr, maxStr] = priceRange.split('-');
            const min = parseInt(minStr) || 0;
            const max = parseInt(maxStr) || Infinity;
            matchesPrice = flower.price >= min && flower.price <= max;
        }

        // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        let matchesCategory = true;
        if (activeCategory) {
            if (activeCategory.startsWith('flowers-price-')) {
                // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ü–µ–Ω –¥–ª—è —Ü–≤–µ—Ç–æ–≤: flowers-price-min-max
                const parts = activeCategory.split('-');
                const min = parseInt(parts[2]) || 0;
                const max = parseInt(parts[3]) || Infinity;
                matchesCategory = flower.price >= min && flower.price <= max;
            } else {
                matchesCategory = flower.category === activeCategory;
            }
        }

        return matchesSearch && matchesPrice && matchesCategory;
    });

    renderFilteredFlowers();
}

// –†–µ–Ω–¥–µ—Ä –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤
function renderFilteredFlowers() {
    const flowersGrid = document.getElementById('flowersGrid');
    flowersGrid.innerHTML = '';

    if (filteredFlowers.length === 0) {
        flowersGrid.innerHTML = '<div class="no-results"><p>–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p></div>';
        return;
    }

    filteredFlowers.forEach(flower => {
        const flowerCard = createFlowerCard(flower);
        flowersGrid.appendChild(flowerCard);
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
window.changeView = function (view) {
    currentView = view;
    const flowersGrid = document.getElementById('flowersGrid');
    const viewBtns = document.querySelectorAll('.view-btn');

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    viewBtns.forEach(btn => btn.classList.remove('active'));
    const clickedBtn = document.querySelector(`[onclick*="${view}"]`);
    if (clickedBtn) {
        clickedBtn.classList.add('active');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã —Å–µ—Ç–∫–∏
    flowersGrid.className = `flowers-grid ${view === 'list' ? 'list-view' : ''}`;

    // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º —Ü–≤–µ—Ç—ã
    renderFilteredFlowers();
};

// –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
window.toggleMobileMenu = function () {
    const navLinks = document.getElementById('navLinks');
    const isActive = navLinks.classList.contains('active');

    if (isActive) {
        navLinks.classList.remove('active');
        document.body.style.overflow = 'auto'; // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∫—Ä–æ–ª–ª
    } else {
        navLinks.classList.add('active');
        document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª
    }
};

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
document.addEventListener('click', function (e) {
    if (e.target.matches('.nav-links a')) {
        const navLinks = document.getElementById('navLinks');
        navLinks.classList.remove('active');
        document.body.style.overflow = 'auto';
    }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
window.addEventListener('resize', function () {
    if (window.innerWidth > 768) {
        const navLinks = document.getElementById('navLinks');
        navLinks.classList.remove('active');
        document.body.style.overflow = 'auto';
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ü–≤–µ—Ç–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥
function loadFlowers() {
    const flowers = getFlowers();
    filteredFlowers = [...flowers];
    renderFilteredFlowers();
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π —Å–∫–∏–¥–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞
function getActiveDiscount(productId) {
    const discounts = JSON.parse(localStorage.getItem('pleione_discounts') || '[]');
    const today = new Date().toISOString().split('T')[0];

    return discounts.find(d =>
        d.productId === productId &&
        d.startDate <= today &&
        d.endDate >= today
    );
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ü–≤–µ—Ç–∫–∞
function createFlowerCard(flower) {
    const card = document.createElement('div');
    card.className = 'flower-card';

    const discount = getActiveDiscount(flower.id);
    const finalPrice = discount ? Math.round(flower.price * (1 - discount.percent / 100)) : flower.price;

    card.innerHTML = `
        <div class="flower-image">
            <img src="${flower.image}" alt="${flower.name}">
        </div>
        <div class="flower-info">
            <h3 class="flower-name">${flower.name}</h3>
            <div class="flower-price">
                ${discount ? `<span style="text-decoration: line-through; color: #999; margin-right: 0.5rem;">${flower.price} ‚ÇΩ</span>` : ''}
                ${finalPrice} ‚ÇΩ
                ${discount ? `<span style="background: #dc3545; color: white; padding: 0.2rem 0.5rem; border-radius: 10px; font-size: 0.8rem; margin-left: 0.5rem;">-${discount.percent}%</span>` : ''}
            </div>
            <p class="flower-description">${flower.description}</p>
            <div class="quantity-controls">
                <button class="quantity-btn" onclick="changeQuantity(${flower.id}, -1)">-</button>
                <span class="quantity-display" id="quantity-${flower.id}">0</span>
                <button class="quantity-btn" onclick="changeQuantity(${flower.id}, 1)">+</button>
            </div>
            <button class="add-to-cart" onclick="addToCart(${flower.id})">
                <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –≤ –±—É–∫–µ—Ç
            </button>
        </div>
    `;
    return card;
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
function changeQuantity(flowerId, change) {
    const quantityDisplay = document.getElementById(`quantity-${flowerId}`);
    let currentQuantity = parseInt(quantityDisplay.textContent) || 0;
    currentQuantity = Math.max(0, currentQuantity + change);
    quantityDisplay.textContent = currentQuantity;

    // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    if ('vibrate' in navigator && change !== 0) {
        navigator.vibrate(50);
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
function addToCart(flowerId) {
    const quantityDisplay = document.getElementById(`quantity-${flowerId}`);
    const quantity = parseInt(quantityDisplay.textContent) || 0;

    if (quantity === 0) {
        showNotification('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–≤–µ—Ç–æ–≤', 'error');
        return;
    }

    const flowers = getFlowers();
    const flower = flowers.find(f => f.id === flowerId);
    const discount = getActiveDiscount(flowerId);
    const finalPrice = discount ? Math.round(flower.price * (1 - discount.percent / 100)) : flower.price;

    const existingItem = cart.find(item => item.id === flowerId);

    if (existingItem) {
        existingItem.quantity += quantity;
    } else {
        cart.push({
            ...flower,
            price: finalPrice, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π
            originalPrice: flower.price, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
            quantity: quantity
        });
    }

    // –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞
    quantityDisplay.textContent = '0';

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    saveUserCart(cart);

    updateCartCount();
    showNotification(`${flower.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±—É–∫–µ—Ç!`, 'success');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
function updateCartCount() {
    const cartCount = document.getElementById('cartCount');
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCount.textContent = totalItems;
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
function toggleCart() {
    const cartOverlay = document.getElementById('cartOverlay');
    const isVisible = cartOverlay.style.display === 'flex';

    if (isVisible) {
        cartOverlay.style.display = 'none';
        document.body.style.overflow = 'auto';
    } else {
        cartOverlay.style.display = 'flex';
        document.body.style.overflow = 'hidden'; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Ñ–æ–Ω–∞
        updateCartDisplay();
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã
function updateCartDisplay() {
    const cartItems = document.getElementById('cartItems');
    const cartTotal = document.getElementById('cartTotal');

    cartItems.innerHTML = '';

    if (cart.length === 0) {
        cartItems.innerHTML = '<p style="text-align: center; color: #666; padding: 2rem;">–í–∞—à –±—É–∫–µ—Ç –ø—É—Å—Ç</p>';
        cartTotal.textContent = '0 ‚ÇΩ';
        return;
    }

    let total = 0;

    cart.forEach(item => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;

        const cartItem = document.createElement('div');
        cartItem.className = 'cart-item';

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∫–∏–¥–∫–∞
        const hasDiscount = item.originalPrice && item.originalPrice > item.price;

        cartItem.innerHTML = `
            <div class="cart-item-info">
                <div class="cart-item-name">${item.name}</div>
                <div class="cart-item-price">
                    ${hasDiscount ? `<span style="text-decoration: line-through; color: #999; margin-right: 0.5rem;">${item.originalPrice} ‚ÇΩ</span>` : ''}
                    ${item.price} ‚ÇΩ √ó ${item.quantity}
                    ${hasDiscount ? `<span style="background: #dc3545; color: white; padding: 0.2rem 0.5rem; border-radius: 10px; font-size: 0.8rem; margin-left: 0.5rem;">–°–∫–∏–¥–∫–∞</span>` : ''}
                </div>
            </div>
            <div class="cart-item-quantity">
                <button class="quantity-btn" onclick="updateCartItemQuantity(${item.id}, -1)">-</button>
                <span>${item.quantity}</span>
                <button class="quantity-btn" onclick="updateCartItemQuantity(${item.id}, 1)">+</button>
            </div>
        `;
        cartItems.appendChild(cartItem);
    });

    cartTotal.textContent = `${total} ‚ÇΩ`;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
function updateCartItemQuantity(flowerId, change) {
    const item = cart.find(item => item.id === flowerId);
    if (item) {
        item.quantity = Math.max(0, item.quantity + change);
        if (item.quantity === 0) {
            cart = cart.filter(item => item.id !== flowerId);
        }
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        saveUserCart(cart);
        updateCartCount();
        updateCartDisplay();
    }
}

// –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
function scrollToCatalog() {
    const catalog = document.getElementById('catalog');
    const headerHeight = document.querySelector('.header').offsetHeight;
    const catalogTop = catalog.offsetTop - headerHeight - 20;

    window.scrollTo({
        top: catalogTop,
        behavior: 'smooth'
    });
}

// –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ WhatsApp
function placeOrder() {
    if (cart.length === 0) {
        showNotification('–í–∞—à –±—É–∫–µ—Ç –ø—É—Å—Ç', 'error');
        return;
    }

    const message = createOrderMessage();
    const whatsappNumber = '+7XXXXXXXXXX'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –Ω–æ–º–µ—Ä
    const whatsappUrl = `https://wa.me/${whatsappNumber}?text=${encodeURIComponent(message)}`;

    window.open(whatsappUrl, '_blank');
}

// –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ Telegram
function placeOrderTelegram() {
    if (cart.length === 0) {
        showNotification('–í–∞—à –±—É–∫–µ—Ç –ø—É—Å—Ç', 'error');
        return;
    }

    const message = createOrderMessage();
    const telegramUsername = 'pleione_flowers'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à username
    const telegramUrl = `https://t.me/${telegramUsername}?text=${encodeURIComponent(message)}`;

    window.open(telegramUrl, '_blank');
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
function createOrderMessage() {
    let message = `üå∏ *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –±—É–∫–µ—Ç–∞ –æ—Ç Pleione* üå∏\n\n`;
    message += `*–°–æ—Å—Ç–∞–≤ –±—É–∫–µ—Ç–∞:*\n`;

    let total = 0;
    cart.forEach(item => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        message += `‚Ä¢ ${item.name} - ${item.quantity} —à—Ç. (${itemTotal} ‚ÇΩ)\n`;
    });

    message += `\n*–ò—Ç–æ–≥–æ: ${total} ‚ÇΩ*\n\n`;
    message += `üì± –ó–∞–∫–∞–∑ —Ä–∞–∑–º–µ—â–µ–Ω —á–µ—Ä–µ–∑ —Å–∞–π—Ç\n`;
    message += `üïê –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}\n\n`;
    message += `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –¥–æ—Å—Ç–∞–≤–∫–∏.`;

    return message;
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;

    // –°—Ç–∏–ª–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : '#2196F3'};
        color: white;
        padding: 1rem 1.5rem;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.2);
        z-index: 3000;
        transform: translateX(400px);
        transition: transform 0.3s ease;
        max-width: 300px;
        font-weight: 500;
    `;

    document.body.appendChild(notification);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
        notification.style.transform = 'translateX(0)';
    }, 100);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
    setTimeout(() => {
        notification.style.transform = 'translateX(400px)';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ—ë
document.addEventListener('click', function (event) {
    const cartOverlay = document.getElementById('cartOverlay');
    const cartModal = document.querySelector('.cart-modal');

    if (event.target === cartOverlay) {
        cartOverlay.style.display = 'none';
    }
});

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
        }
    });
}, observerOptions);

// –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
document.addEventListener('DOMContentLoaded', function () {
    const animatedElements = document.querySelectorAll('.flower-card, .feature, .contact-item');
    animatedElements.forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px)';
        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(el);
    });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –∫–æ—Ä–∑–∏–Ω—ã
let startY = 0;
let currentY = 0;

document.addEventListener('touchstart', function (e) {
    if (e.target.closest('.cart-modal')) {
        startY = e.touches[0].clientY;
    }
});

document.addEventListener('touchmove', function (e) {
    if (e.target.closest('.cart-modal')) {
        currentY = e.touches[0].clientY;
        const diffY = currentY - startY;

        if (diffY > 100) { // –°–≤–∞–π–ø –≤–Ω–∏–∑ –Ω–∞ 100px
            toggleCart();
        }
    }
});